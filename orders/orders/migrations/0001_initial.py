# Generated by Django 3.1.2 on 2020-10-30 18:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('is_vendor', models.BooleanField(default=False, verbose_name='Представитель поставщика')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=50, verbose_name='Фамилия')),
                ('third_name', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('company', models.CharField(blank=True, max_length=50, verbose_name='Компания')),
                ('position', models.CharField(blank=True, max_length=50, verbose_name='Должность')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='AdditionalGoodParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=50, verbose_name='Наименование')),
                ('value', models.CharField(max_length=50, verbose_name='Значение')),
            ],
            options={
                'verbose_name': 'Параметр',
                'verbose_name_plural': 'Параметры',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='ForWhom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('street', models.CharField(max_length=50, verbose_name='Улица')),
                ('house', models.CharField(max_length=50, verbose_name='Дом')),
                ('structure', models.CharField(blank=True, max_length=50, verbose_name='Корпус')),
                ('building', models.CharField(blank=True, max_length=50, verbose_name='Строение')),
                ('apartment', models.CharField(blank=True, max_length=50, verbose_name='Квартира')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='Телефон')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время соз2ания')),
                ('is_delivered', models.BooleanField(default=False, verbose_name='Доставлен')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Подтвержден')),
                ('for_whom', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='for_whom', to='orders.forwhom')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('status', models.BooleanField(default=True, verbose_name='Принимает заказы')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
            },
        ),
        migrations.CreateModel(
            name='OrderedGoods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('good_id', models.PositiveIntegerField(verbose_name='Заказанный товар')),
                ('shop_id', models.PositiveIntegerField(verbose_name='Предоставивший поставщик')),
                ('quantity', models.CharField(max_length=50, verbose_name='Количество')),
                ('order', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='ordered_goods', to='orders.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Заказанный товар',
                'verbose_name_plural': 'Заказанные товары',
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=50, verbose_name='Модель')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('price', models.PositiveIntegerField(verbose_name='Оптовая цена')),
                ('price_rrc', models.PositiveIntegerField(verbose_name='Розничная цена')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.category', verbose_name='Категория')),
                ('parameters', models.ManyToManyField(related_name='parameters', to='orders.AdditionalGoodParameter', verbose_name='Параметры')),
                ('shops', models.ManyToManyField(related_name='shops', to='orders.Shop', verbose_name='Поставщики')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
    ]
